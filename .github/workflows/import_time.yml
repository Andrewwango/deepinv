name: "ðŸ”¬ Import Time Benchmark (vs main)"

on:
  pull_request:
      branches:
      - main

permissions:
  # Required to checkout the repo
  contents: read
  # Required to post a comment on the PR
  pull-requests: write

jobs:
  benchmark-comparison:
    name: Import time vs main
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip' # caching pip dependencies

      - name: "Set up Hyperfine"
        run: |
          sudo apt-get update && sudo apt-get install -y hyperfine

      - name: Install deepinv and its dependencies
        run: |
          pip install .

      - name: "Benchmark PR (HEAD)"
        run: |
          echo "Benchmarking PR branch..."
          hyperfine --warmup 3 --export-json head.json "python -c 'import deepinv'"
          pip uninstall -y deepinv # Clean up for the next step

      - name: "Checkout main branch"
        run: |
          git fetch origin main --depth=1
          git checkout main

      - name: "Benchmark main (BASE)"
        run: |
          echo "Benchmarking main branch..."
          pip install .
          hyperfine --warmup 3 --export-json base.json "python -c 'import deepinv'"

      - name: "Compare results and post comment"
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const head = JSON.parse(fs.readFileSync('head.json', 'utf8')).results[0];
            const base = JSON.parse(fs.readFileSync('base.json', 'utf8')).results[0];

            // Helper to format time in milliseconds
            const formatMs = (seconds) => (seconds * 1000).toFixed(2);

            const head_mean = formatMs(head.mean);
            const head_stddev = formatMs(head.stddev);
            const base_mean = formatMs(base.mean);
            const base_stddev = formatMs(base.stddev);

            const ratio = head.mean / base.mean;
            let comparison_text;
            // Use a 5% tolerance threshold to avoid noise
            if (ratio > 1.05) {
              comparison_text = `ðŸ”¥ **Regression**: This PR is **${ratio.toFixed(2)}x slower**.`;
            } else if (ratio < 0.95) {
              comparison_text = `ðŸš€ **Improvement**: This PR is **${ratio.toFixed(2)}x faster**.`;
            } else {
              comparison_text = `âœ… **No significant change** detected (${ratio.toFixed(2)}x).`;
            }

            const body = `
            ### ðŸ”¬ Import Time Benchmark

            | Branch  | Mean Import Time (ms) |
            |---------|-----------------------|
            | \`main\`  | \`${base_mean} Â± ${base_stddev}\`  |
            | This PR | \`${head_mean} Â± ${head_stddev}\`  |

            ${comparison_text}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });